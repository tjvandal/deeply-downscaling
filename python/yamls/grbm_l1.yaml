!obj:pylearn2.train.Train {
    dataset: &train !obj:load_data.load_pretraining {
        minyear: 1950,
        maxyear: 1980,
        batchsize: 100,
    },
       model: !obj:pylearn2.models.rbm.GaussianBinaryRBM {
        nvis : 2178,
        nhid : %i,
        irange : 0.05,
        energy_function_class : !obj:pylearn2.energy_functions.rbm_energy.grbm_type_1 {},
        learn_sigma : True,
        init_sigma : 1.0,
        mean_vis : False,
        sigma_lr_scale : 1e-3

    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate : 1e-1,
        batch_size : 50,
        #monitoring_batches : 20,
        monitoring_dataset : *train,
        cost : !obj:pylearn2.costs.ebm_estimation.SMD {

            # Denoising score matching uses a corruption process to transform
            # the raw data.  Here we use additive gaussian noise.

            corruptor : !obj:pylearn2.corruption.GaussianCorruptor {
                    stdev : 0.4
            }
        },
        termination_criterion : !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: 200,
        },
    },
    save_path: "models/grbm_l1_%i.pkl",
    save_freq: 1
}
